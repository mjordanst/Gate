/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef rfa_xdr_h
#define rfa_xdr_h

#include <rpc/types.h>
#include <rpc/xdr.h>

#define RFA_SERVER (u_long)600000040
#define RFA_SERVER_VERSION (u_long)1

typedef enum _RFA_FUNCTIONS {
	RFMT = 1,
	RDIR = 1 + 1,
	RREN = 1 + 2,
	RDEL = 1 + 3,
	RBUG = 1 + 4,
	RCPY = 1 + 5,
	RSIZ = 1 + 6
} RFA_FUNCTIONS;

typedef struct _RREN_args {
	char *oldName;
	char *newName;
} RREN_args;

typedef struct _RCPY_args {
	char *oldName;
	char *newName;
	long fileSize;
} RCPY_args;

typedef struct _RDIR_args {
	char *dirPath;
	int currDirNo;
} RDIR_args;

typedef struct _RDIR_resp {
	char *dirEntry;
	int nextDirNo;
	int freeChunk;
} RDIR_resp;

#if defined(__STDC__) || defined(__cplusplus)
#if defined(__cplusplus)
extern "C" {
#endif
bool_t xdr_RFA_FUNCTIONS(XDR *xdrs, RFA_FUNCTIONS *objp);
bool_t xdr_RREN_args(XDR *xdrs, RREN_args *objp);
bool_t xdr_RCPY_args(XDR *xdrs, RCPY_args *objp);
bool_t xdr_RDIR_args(XDR *xdrs, RDIR_args *objp);
bool_t xdr_RDIR_resp(XDR *xdrs, RDIR_resp *objp);
#if defined(__cplusplus)
}
#endif
#else /* __STDC__ */
bool_t xdr_RDIR_resp();
bool_t xdr_RFA_FUNCTIONS();
bool_t xdr_RREN_args();
bool_t xdr_RCPY_args();
bool_t xdr_RDIR_args();
bool_t xdr_RDIR_resp();
#endif /* __STDC__ */

#endif /* rfa_xdr_h */
